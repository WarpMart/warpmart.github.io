/* browser.js v1.0.1 | @ajlkn | MIT licensed */
var browser = (function() {
    'use strict';
  
    var browser = {
      name: null,
      version: null,
      os: null,
      osVersion: null,
      touch: null,
      mobile: null,
      _canUse: null,
      canUse: function(feature) {
        if (!this._canUse) {
          this._canUse = document.createElement('div');
        }
  
        var style = this._canUse.style;
        var capitalized = feature.charAt(0).toUpperCase() + feature.slice(1);
  
        return (
          feature in style ||
          'Moz' + capitalized in style ||
          'Webkit' + capitalized in style ||
          'O' + capitalized in style ||
          'ms' + capitalized in style
        );
      },
      init: function() {
        var userAgent = navigator.userAgent;
        var name = 'other';
        var version = 0;
  
        var data = [
          ['firefox', /Firefox\/([0-9\.]+)/],
          ['bb', /BlackBerry.+Version\/([0-9\.]+)/],
          ['bb', /BB[0-9]+.+Version\/([0-9\.]+)/],
          ['opera', /OPR\/([0-9\.]+)/],
          ['opera', /Opera\/([0-9\.]+)/],
          ['edge', /Edge\/([0-9\.]+)/],
          ['safari', /Version\/([0-9\.]+).+Safari/],
          ['chrome', /Chrome\/([0-9\.]+)/],
          ['ie', /MSIE ([0-9]+)/],
          ['ie', /Trident\/.+rv:([0-9]+)/]
        ];
  
        for (var i = 0; i < data.length; i++) {
          if (userAgent.match(data[i][1])) {
            name = data[i][0];
            version = parseFloat(RegExp.$1);
            break;
          }
        }
  
        this.name = name;
        this.version = version;
  
        name = 'other';
        data = [
          ['ios', /([0-9_]+) like Mac OS X/, function(version) {
            return version.replace('_', '.').replace('_', '');
          }],
          ['ios', /CPU like Mac OS X/, function() {
            return 0;
          }],
          ['wp', /Windows Phone ([0-9\.]+)/, null],
          ['android', /Android ([0-9\.]+)/, null],
          ['mac', /Macintosh.+Mac OS X ([0-9_]+)/, function(version) {
            return version.replace('_', '.').replace('_', '');
          }],
          ['windows', /Windows NT ([0-9\.]+)/, null],
          ['bb', /BlackBerry.+Version\/([0-9\.]+)/, null],
          ['bb', /BB[0-9]+.+Version\/([0-9\.]+)/, null],
          ['linux', /Linux/, null],
          ['bsd', /BSD/, null],
          ['unix', /X11/, null]
        ];
  
        for (var j = 0; j < data.length; j++) {
          if (userAgent.match(data[j][1])) {
            name = data[j][0];
            version = parseFloat(data[j][2] ? data[j][2](RegExp.$1) : RegExp.$1);
            break;
          }
        }
  
        if (name === 'mac' && 'ontouchstart' in window) {
          if (
            (screen.width === 1024 && screen.height === 1366) ||
            (screen.width === 834 && screen.height === 1112) ||
            (screen.width === 810 && screen.height === 1080) ||
            (screen.width === 768 && screen.height === 1024)
          ) {
            name = 'ios';
          }
        }
  
        this.os = name;
        this.osVersion = version;
        this.touch =
          this.os === 'wp'
            ? navigator.msMaxTouchPoints > 0
            : !!('ontouchstart' in window);
        this.mobile =
          this.os === 'wp' || this.os === 'android' || this.os === 'ios' || this.os === 'bb';
      }
    };
  
    browser.init();
    return browser;
  })();
  
  !(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
      define([], factory);
    } else if (typeof exports === 'object') {
      module.exports = factory();
    } else {
      root.browser = factory();
    }
  })(this, function() {
    return browser;
  });